set background=dark
set autoindent
set ruler
set showcmd
set incsearch
set foldmethod=indent
set autowriteall
set autoread
set foldminlines=1
set backupdir=~/tmp
set shiftwidth=2
set tabstop=2
set expandtab
set textwidth=78 wrap

" begin freebsd needs
set backspace=indent,eol,start
syntax on
set hlsearch
" end freebsd needs


function! MKDHeader(char)
ruby << RUBY
  cb = VIM::Buffer.current
  ln = cb.line_number
  content = cb.line.strip
  underline = content.gsub(/./, VIM.evaluate("a:char")).rjust(78)
  cb[ln] = content.rjust(78)
  unless cb[ln + 1] == underline 
    cb.append(ln, underline)
  end
RUBY
endfunction
nnoremap mkdh1 :silent! call MKDHeader("=")<CR>
nnoremap mkdh2 :silent! call MKDHeader("-")<CR>

runtime macros/justify.vim
nnoremap just :call Justify(78)<CR>

function! HaskellAlign()
ruby << RUBY
  l_bound = 32
  l_bound -= 5
  r_bound = 50 
  r_bound -= 2
  cb = VIM::Buffer.current
  pat = / (<-|=|::) /
  ln = cb.line_number
  content = cb.line
  m = pat.match(content)
  if m
    front, back = m.pre_match.gsub(/[[:space:]]+$/, ''), m.post_match.strip
    too_long = (front.length > l_bound) or (back.length > r_bound)
    unless too_long or front.length.zero?
      formatted = front.ljust(l_bound) + m[0].rjust(4).ljust(5) + back
      cb[ln] = formatted
    end
  end
RUBY
endfunction
nnoremap hal :% call HaskellAlign()<CR>


filetype plugin indent on

autocmd FileType text setlocal textwidth=64 wrap
autocmd FileType mkd setlocal textwidth=78 wrap

" wikipedia is an annoying format
" i need to figure out some 1337 h4x for it
autocmd FileType wikipedia setlocal textwidth=78

if has("autocmd") && exists("+omnifunc")
	autocmd Filetype *
	\	if &omnifunc == "" |
	\		setlocal omnifunc=syntaxcomplete#Complete |
	\	endif
endif

au FileType c setlocal tabstop=8 shiftwidth=8 noexpandtab
au FileType python setlocal tabstop=4 shiftwidth=4 expandtab

augroup mkd
  autocmd BufRead *.mkd  set ai formatoptions=tcroqn2 comments=n:>
augroup END

" annoying initial highlights removed
nohlsearch

