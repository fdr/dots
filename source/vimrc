set background=dark
set autoindent
set ruler
set showcmd
set incsearch
set autowriteall
set autoread
set foldminlines=1
set backupdir=~/tmp
set directory=~/tmp
set shiftwidth=2
set tabstop=2
set expandtab
set textwidth=78 wrap
set nohlsearch
set foldexpr=indent(v:lnum)
set foldmethod=expr

syntax on

" begin freebsd needs
set backspace=indent,eol,start
" end freebsd needs


runtime macros/justify.vim
nnoremap just :call Justify(&tw)<CR>

nnoremap tj :silent! call TeXAlign()<CR> 
function! TeXAlign()
python << PYTHON
import vim
import re
cl = vim.current.line
width = int(vim.eval("&tw"))
m = re.compile(r"\\([^{]+)\{[ ]*(.*[^ ])[ ]*\}").search(cl)
if m:
    (command, content) = m.groups()
    spaced = content.rjust(width - 3 - len(command))
    vim.current.line = "\\" + command + "{" + spaced + " }"
PYTHON
endfunction

function! RHeader(char)
python << PYTHON
import vim
import re
c = vim.eval("a:char")
cb = vim.current.buffer
cw = vim.current.window
(row, col) = cw.cursor
width = int(vim.eval("&tw"))
matter = cb[row - 1].strip()
lead_in = re.sub("^(\S)", " \g<1>", c * 2)
cb[row - 1] = " " + lead_in + matter.rjust(width - 1 - len(lead_in))
rn = cb.range(row, row)
rn.append([ " " + (c * width) , "", "   " ])
cw.cursor = (row + 3, 2)
PYTHON
endfunction
nnoremap hd :silent! call RHeader("-")<CR>
nnoremap tb :silent! call RHeader("=")<CR>

" Delete date and such at the top of email replies.
nnoremap ck :silent! . ! sed -E 's/([> ]*).+, ([^,]+)$/\1\2/'<CR>

function! HaskellAlign()
python << PYTHON
import vim
import re
cl = vim.current.line
width = int(vim.eval("&tw"))
if width is 78:
    fw = 32 - 5
    aw = 48 - 2
elif width is 64:
    fw = 25 - 5
    aw = 39
else:
    fw = 32 - 5
    aw = 48 - 2
 ## The "->" match case works because the first match wins.
m = re.compile(r" (<-|=|::|->) ").search(cl)
if m:
    fore = re.compile(r"\s+$").sub('', cl[:m.start()])
    aft = re.compile(r"^\s+").sub('', cl[m.end():])
    all_spaces = re.compile(r"^\s*$").search(fore)
    if len(fore) <= fw and len(aft) <= aw and not len(fore) is 0:
        spaced_out = m.group().rjust(4).ljust(5)
        formatted = fore.ljust(fw) + spaced_out + aft
        vim.current.line = formatted
PYTHON
endfunction
function! HaskellAlignAll()
  let a = line(".")
  let b = col(".")
  % call HaskellAlign()
  if cursor(a, b)
  endif
endfunction
nnoremap hal :call HaskellAlignAll() <CR>


filetype plugin indent on

autocmd FileType ldif setlocal list
autocmd FileType text setlocal textwidth=64 wrap
autocmd FileType mkd setlocal textwidth=78 wrap

" wikipedia is an annoying format
" i need to figure out some 1337 h4x for it
autocmd FileType wikipedia setlocal textwidth=78

if has("autocmd") && exists("+omnifunc")
	autocmd Filetype *
	\	if &omnifunc == "" |
	\		setlocal omnifunc=syntaxcomplete#Complete |
	\	endif
endif

" au FileType c setlocal tabstop=8 shiftwidth=8 noexpandtab
au FileType python setlocal tabstop=4 shiftwidth=4 expandtab

augroup mkd
  autocmd BufRead *.mkd  set ai formatoptions=tcroqn2 comments=n:>
augroup END

" annoying initial highlights removed
nohlsearch

